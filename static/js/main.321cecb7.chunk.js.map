{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortAlphabetically","ALPHABET","sortByLength","LENGTH","reset","this","className","type","classNames","onClick","goods","visibleGoods","sort","good1","good2","localeCompare","length","getReorderedGoods","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,mBAAqB,WACnB,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUL,EAASY,UApBzB,EAwBEC,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KA3BlB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAuBpB,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYZ,IAAaL,EAASU,WAEpCQ,QAASJ,KAAKL,mBALhB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYZ,IAAaL,EAASY,SAEpCM,QAASJ,KAAKH,aALhB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAab,IAEfc,QAASJ,KAAKP,QALhB,sBAWGF,IAAaL,EAASM,MAAQF,IAE3B,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,MAHhB,sBAWR,6BApEJ,SACEM,EADF,GAGG,IADCd,EACF,EADEA,SAAUD,EACZ,EADYA,WAENgB,EAAY,YAAOD,GAczB,OAZId,IAAaL,EAASU,UACxBU,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGtDlB,IAAaL,EAASY,QACxBQ,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGvDrB,GACFgB,EAAab,UAGRa,EAmDFM,CAAkBzB,EAAiBa,KAAKX,OAAOwB,KAAI,SAAAC,GAAI,OACtD,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAzGnB,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.321cecb7.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    function getReorderedGoods(\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions, // eslint-disable-line\n    ) {\n      const visibleGoods = [...goods];\n\n      if (sortType === SortType.ALPHABET) {\n        visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      }\n\n      if (sortType === SortType.LENGTH) {\n        visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      }\n\n      if (isReversed) {\n        visibleGoods.reverse();\n      }\n\n      return visibleGoods;\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}